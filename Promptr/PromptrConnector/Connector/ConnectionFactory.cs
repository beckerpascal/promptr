using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Q42.HueApi;
using Q42.HueApi.Interfaces;
using Q42.HueApi.NET;

namespace PromptrLib.Connector
{
    /*
     * Factory for creating connections with a specific Hue Bridge defined in the Constants class
     */ 
    public class ConnectionFactory
    {
        // private member for the app key for authorization
        private readonly string _appKey;

        /*
         * Constructor for setting up a factory
         * @param appKey: app key generated by the Hue Bridge
         */ 
        public ConnectionFactory(string appKey)
        {
            this._appKey = appKey;
        }

        /*
         * Method to receive a new connection based on the parameters set in the constructur
         */ 
        public Connection GetConnection()
        {
            //IBridgeLocator locator = new SSDPBridgeLocator();
            //IEnumerable<string> bridgeIPs = await locator.LocateBridgesAsync(TimeSpan.FromSeconds(20));


            ILocalHueClient client = new LocalHueClient(Constants.BRIDGE_IP);
            client.Initialize(_appKey);

            return new Connection(client);
        }

        
    }
}
